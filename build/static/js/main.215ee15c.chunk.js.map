{"version":3,"sources":["components/Navbar.jsx","components/LogComponent.jsx","util/BlomScheme.js","util/User.js","util/rc4.js","components/ChatComponent.jsx","components/Container.jsx","App.js","serviceWorker.js","index.js"],"names":["NavbarComponent","react_default","a","createElement","reactstrap_es","color","dark","expand","href","React","PureComponent","LogComponent","logInfo","this","props","body","inverse","style","backgroundColor","borderColor","height","concat","window","innerHeight","overflow","map","info","index","text","split","key","message","i","className","whiteSpace","toString","BlomScheme","size","_this","Object","classCallCheck","randomNumber","Math","floor","random","module","getModule","getOpentId","username","result","openIds","getSecret","openID","buf","j","secrMatrix","indexPrime","primeNumbers","length","User","openId","secretId","getOpenId","setOpenId","newOpenId","getSecretId","setSecretId","newSecretId","calculateKey","String","id","rc4","str","x","s","res","charCodeAt","y","fromCharCode","Manager","outline","xs","for","invalid","errorUser","type","name","placeholder","ref","getUsername","block","onClick","addUser","usernames","action","active","activeUsername","tag","setActiveUsername","Chat","_this2","possibleConstructorReturn","getPrototypeOf","call","addMessage","e","ReactDom","findDOMNode","value","user","getMessage","state","sender","Fragment","Rc4","_this3","messages","minHeight","transition","marginRight","marginLeft","decryptMessage","ChatComponent","_this4","marginBottom","ChatComponent_Manager","defineProperty","ChatComponent_Chat","ContainerComponent","setState","slice","encryptMessages","logMessage","Date","toTimeString","users","push","findIndex","t","Kdc","join","matrixString","marginTop","ChatComponent_ChatComponent","LogComponent_LogComponent","App","Navbar_NavbarComponent","Container_ContainerComponent","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.215ee15c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport '../App.css';\n\nexport default class NavbarComponent extends React.PureComponent {\n\n  render() {\n    return (\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand href=\"/\">RC4 шифрование с распределением ключей по схеме Блома</NavbarBrand>\n      </Navbar>\n    );\n  }\n}","import React from 'react';\r\nimport { Row, Col, Card } from 'reactstrap';\r\nimport '../App.css';\r\n\r\nexport default class LogComponent extends React.PureComponent {\r\n\r\n  render() {\r\n    const {logInfo} = this.props;\r\n    return (\r\n      <Card body inverse style={{ backgroundColor: '#333', borderColor: '#333' }}>\r\n        <div style={{ height: `${window.innerHeight-130}px`, overflow: 'auto'}}>\r\n          {logInfo.map((info, index)=> {\r\n              const text = info.split('\\n');\r\n              return (\r\n                <span key = {`info_${index}`}>\r\n                  {text.map( (message, i) => (\r\n                    <div className={(i==0)?\"text-danger\":\"text-success\"} style={{whiteSpace: 'pre'}} key = {`info_${index}_message_${i}`}> {message.toString()} </div>\r\n                  ))}\r\n                  <br/>\r\n                </span>\r\n              ) \r\n            })\r\n          }\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}","import primeNumbers from './primesNumbers.json';\r\n\r\nexport default class BlomScheme {\r\n\r\n    constructor(size) {\r\n        this.size = size;\r\n        this.secrMatrix = [];\r\n        this.openIds = {};\r\n\r\n        const indexPrime = Math.floor(Math.random() * (primeNumbers.length-1));\r\n\r\n        this.module = primeNumbers[indexPrime];\r\n\r\n        this.secrMatrix = [];\r\n\r\n        for (let i = 0; i < this.size; i++) {\r\n            this.secrMatrix[i] = [];\r\n        }\r\n\r\n        for (let i = 0; i < this.size; i++) {\r\n            for (let j = i; j < this.size; j++) {\r\n                this.secrMatrix[i][j] = this.randomNumber();\r\n                if (i !== j) {\r\n                    this.secrMatrix[j][i] = this.secrMatrix[i][j];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    randomNumber = ()=> {\r\n        return Math.floor(Math.random() * (this.module-1));\r\n    };\r\n\r\n    getModule = ()=> {\r\n        return this.module;\r\n    };\r\n\r\n    getOpentId = username => {\r\n        const result = [];\r\n        for (let i = 0; i < this.size; i++) {\r\n            result[i] = this.randomNumber();\r\n        }\r\n        this.openIds[username] = result;\r\n        return result;\r\n    };\r\n\r\n    getSecret = (openID)=> {\r\n        const result = [];\r\n        let temp;\r\n        let buf\r\n        for (let i = 0; i < this.size; i++) {\r\n            result[i] = 0;\r\n            for (let j = 0; j < this.size; j++) {\r\n                buf = this.secrMatrix[i][j] * openID[j];\r\n                result[i] += buf;\r\n                result[i] = result[i] % this.module;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n}","export default class User {\r\n\r\n    constructor(index, openId, secretId, module) {\r\n        this.id = index;\r\n        this.openId = openId;\r\n        this.secretId = secretId;\r\n        this.module = module;\r\n    };\r\n\r\n    getOpenId = ()=> {\r\n        return this.openId\r\n    };\r\n\r\n    setOpenId = (newOpenId)=> {\r\n        this.openId = newOpenId\r\n    };\r\n\r\n    getSecretId = ()=> {\r\n        return this.secretId\r\n    };\r\n\r\n    setSecretId = (newSecretId)=> {\r\n        this.secretId = newSecretId\r\n    };\r\n\r\n    calculateKey = (openID) => {\r\n        let result = 0;\r\n        let buf = 0;\r\n        for (let i = 0; i < this.secretId.length; i++) {\r\n            buf = (this.secretId[i] * openID[i]) % this.module;\r\n            result += buf;\r\n            result = result % this.module;\r\n        }\r\n        return String(result);\r\n    };\r\n}","export default function rc4(key, str) {\r\n\tvar s = [], j = 0, x, res = '';\r\n\tfor (var i = 0; i < 256; i++) {\r\n\t\ts[i] = i;\r\n\t}\r\n\tfor (i = 0; i < 256; i++) {\r\n\t\tj = (j + s[i] + key.charCodeAt(i % key.length)) % 256;\r\n\t\tx = s[i];\r\n\t\ts[i] = s[j];\r\n\t\ts[j] = x;\r\n\t}\r\n\ti = 0;\r\n\tj = 0;\r\n\tfor (var y = 0; y < str.length; y++) {\r\n\t\ti = (i + 1) % 256;\r\n\t\tj = (j + s[i]) % 256;\r\n\t\tx = s[i];\r\n\t\ts[i] = s[j];\r\n\t\ts[j] = x;\r\n\t\tres += String.fromCharCode(str.charCodeAt(y) ^ s[(s[i] + s[j]) % 256]);\r\n\t}\r\n\treturn res;\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { Alert, Row, Col, Button, Input, Card, FormGroup, Label, ListGroupItem, ListGroup, FormFeedback } from 'reactstrap';\r\nimport LogComponent from './LogComponent';\r\nimport '../App.css';\r\nimport { Rc4 } from '../util';\r\n\r\nclass Manager extends React.PureComponent {\r\n\r\n  render() {\r\n    return (\r\n      <Card body outline color=\"primary\" style = {{height: '200px'}}>\r\n\r\n        <Row>\r\n          <Col xs ={6}>\r\n\r\n            <FormGroup >\r\n\r\n              <Label for=\"username\" >\r\n                Имя участника\r\n              </Label>\r\n\r\n              <Input\r\n                invalid = {!!this.props.errorUser} \r\n                type=\"username\" \r\n                name=\"username\" \r\n                id=\"username\" \r\n                placeholder=\"Имя участника\" \r\n                ref = {this.props.getUsername} \r\n              />\r\n\r\n              <FormFeedback>{` ${this.props.errorUser} уже существует!`}</FormFeedback>\r\n              \r\n            </FormGroup>\r\n\r\n            <Button block color=\"danger\" onClick={this.props.addUser}>\r\n              Добавить участника\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col xs ={6} className=\"users-container\">\r\n            <ListGroup>\r\n\r\n              {this.props.usernames.map((username, i)=> (\r\n                <ListGroupItem\r\n                  key = {`username_${username.id+i}`}\r\n                  action\r\n                  active = {username.id === this.props.activeUsername.id}\r\n                  tag=\"a\"\r\n                  onClick={()=>this.props.setActiveUsername(username)}\r\n                >\r\n                <b> {username.id} </b>\r\n                </ListGroupItem>\r\n              ))}\r\n\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass Chat extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  addMessage = e => {\r\n    const message = ReactDom.findDOMNode(this.message).value;\r\n    if(message) {\r\n      this.props.addMessage({\r\n        user: this.props.activeUsername,\r\n        text: message\r\n      }) \r\n    }\r\n  };\r\n\r\n  decryptMessage(message) {\r\n    const text = message.text[this.props.activeUsername.id];\r\n    if(text) {\r\n      const sender = message.user;\r\n      const receiver = this.props.activeUsername;\r\n      const key = receiver.calculateKey(sender.openId);\r\n      return (\r\n        <React.Fragment>\r\n           {`Ключ дешифрования: ${key}`}\r\n           <br/>\r\n           {`Зашифровано: ${text}`}\r\n           <br/>\r\n           {`Расшифровано: ${Rc4(key,text)}`}\r\n        </React.Fragment>\r\n      );\r\n    } else return '';\r\n  };\r\n\r\n  getMessage = ref => this.message = ref;\r\n\r\n  render() {\r\n    const messages = this.props.messages || [];\r\n    return (\r\n      <Card body outline color=\"info\" >\r\n        <Row>\r\n\r\n          <Col xs ={5}>\r\n           {this.props.activeUsername.id && (\r\n              <FormGroup>\r\n\r\n                <Label for=\"messageText\" className ='text-center'>{`Участник: ${this.props.activeUsername.id}`}</Label>\r\n                <Input style={{minHeight: '150px'}} type=\"textarea\" name=\"messageText\" id=\"messageText\" ref = {this.getMessage} />\r\n                <Button block onClick={this.addMessage}>\r\n                  Отправить сообщение\r\n                </Button>\r\n\r\n              </FormGroup>\r\n            )}\r\n          </Col>\r\n\r\n          <Col xs={7} className=\"message-container\" >\r\n            {messages.map((message,i)=> {\r\n              const style = {\r\n                transition: 'all 0.2s ease-in'\r\n              };\r\n              if(message.user.id === this.props.activeUsername.id) {\r\n                style.marginRight = '80px';\r\n              } else {\r\n                style.marginLeft = '80px';\r\n              }\r\n              return (\r\n                <Alert key ={message+i} style={style} color={(message.user.id === this.props.activeUsername.id) ? \"success\" : \"danger\"}>\r\n                  <strong>{`${message.user.id} пишет:`}</strong>\r\n                  <br/>\r\n                  {this.decryptMessage(message) || 'Участник присоеденился после отправки сообщения!'}\r\n                </Alert>\r\n              )\r\n            })}\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default class ChatComponent extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <div style ={{marginBottom:'20px'}}>\r\n            <Manager\r\n              errorUser = {this.props.errorUser}\r\n              getUsername = {this.props.getUsername}\r\n              addUser = {this.props.addUser}\r\n              usernames = {this.props.usernames}\r\n              activeUsername = {this.props.activeUsername}\r\n              setActiveUsername = {this.props.setActiveUsername}\r\n              usernames = {this.props.usernames}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Chat\r\n              messages = {this.props.messages}\r\n              addMessage = {this.props.addMessage}\r\n              activeUsername = {this.props.activeUsername}\r\n            />\r\n          </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Alert, Container, Row, Col, Button, Input, Card, FormGroup, Label } from 'reactstrap';\nimport LogComponent from './LogComponent';\nimport ChatComponent from './ChatComponent';\nimport '../App.css';\nimport { User, BlomScheme, Rc4 } from '../util';\n\nexport default class ContainerComponent extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.Kdc = new BlomScheme(4, 1024);\n    let matrixString = '\\n';\n    for (let i = 0; i < this.Kdc.secrMatrix.length; i++) {\n      matrixString += '    '+this.Kdc.secrMatrix[i].join(', ') + '\\n';\n    }\n    const logInfo = [\n    `${(new Date).toTimeString()}\\nПараметры KDC:\\n  размер матрицы: ${this.Kdc.size}\\n  матрица: ${matrixString}  модуль: ${this.Kdc.module}`];\n    this.state = {\n      users: [],\n      messages: [],\n      activeUsername: {},\n      errorUser: null,\n      logInfo: logInfo,\n    };\n  };\n\n  setActiveUsername = username => {\n    this.setState({\n      activeUsername: username\n    })\n  };\n\n  addMessage = message => {\n    const messages = this.state.messages.slice();\n    const encryptMessages = {};\n\n    let logMessage = `${(new Date).toTimeString()}\\nНовое сообщение:\\n  ${message.text}\\n`\n\n    for (let i = 0; i < this.state.users.length; i++) {\n      const user = this.state.users[i];\n      const key = ''+message.user.calculateKey(user.openId);\n      encryptMessages[user.id] = Rc4(key, message.text);\n      logMessage += `${user.id} получает:\\n  ${encryptMessages[user.id]}\\n  ключ шифрования: ${key}\\n\\n`;\n    }\n\n    const logInfo = this.state.logInfo.slice();\n    logInfo.push(logMessage);\n    message.text = encryptMessages;\n\n    messages.push(message);\n    this.setState({logInfo, messages});\n  };\n\n  addUser = e => {\n\n    const username = ReactDom.findDOMNode(this.username).value;\n\n    const users = this.state.users.slice();\n    const logInfo = this.state.logInfo.slice();\n    if(users.findIndex(t=> t.id === username) === -1) {\n      \n      const openId = this.Kdc.getOpentId(username);\n      const secretId = this.Kdc.getSecret(openId);\n      const module = this.Kdc.getSecret(openId);\n      const user = new User(username, openId, secretId, this.Kdc.getModule());\n      users.push(user);\n      logInfo.push(`${(new Date).toTimeString()}\\nНовый участник: ${user.id}\\n  открытый ключ: ${user.openId.join(', ')}\\n  закрытый ключ: ${user.secretId.join(', ')}`)\n\n      this.setState({\n        logInfo,\n        users,\n        errorUser: null\n      });\n\n    } else {\n      this.setState({\n        errorUser: username\n      });\n    }\n  };\n\n  getUsername = ref => this.username = ref; \n\n  render() {\n    return (\n      <Col xs ={12} style={{marginTop: '15px'}}>\n        <Row>\n\n          <Col xs ={7}>\n            <ChatComponent\n              errorUser = {this.state.errorUser}\n              getUsername = {this.getUsername}\n              addUser = {this.addUser}\n              usernames = {this.state.users}\n              setActiveUsername = {this.setActiveUsername}\n              activeUsername = {this.state.activeUsername}\n              messages = {this.state.messages}\n              addMessage = {this.addMessage}\n            />\n          </Col>\n\n          <Col xs ={5}>\n            <LogComponent\n              logInfo = {this.state.logInfo}\n            />\n          </Col>\n\n        </Row>\n      </Col>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Navbar, Container } from './components';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar/>\n        <Container/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}